{"ast":null,"code":"var mongoose = require(\"mongoose\");\n\nvar Schema = mongoose.Schema;\nvar organizer = {\n  admins: [{\n    type: mongoose.Schema.ObjectId,\n    ref: \"User\"\n  }],\n  name: {\n    type: String,\n    trim: true,\n    required: true\n  },\n  url: {\n    type: String,\n    trim: true,\n    required: true\n  },\n  logo: {\n    type: String\n  },\n  about: {\n    type: String,\n    trim: true,\n    required: true\n  },\n  email: {\n    type: String,\n    trim: true\n  },\n  website: {\n    type: String,\n    trim: true\n  },\n  twitter: {\n    type: String,\n    trim: true\n  },\n  instagram: {\n    type: String,\n    trim: true\n  },\n  wallet: {\n    type: String\n  },\n  active: {\n    type: Boolean,\n    \"default\": false\n  }\n};\nvar OrganizerSchema = new Schema(organizer);\nOrganizerSchema.set(\"toJSON\", {\n  getters: true,\n  virtuals: true\n});\nexport default mongoose.models.Organizer || mongoose.model(\"Organizer\", OrganizerSchema);","map":{"version":3,"sources":["/Users/kirilclimson/grants/models/organizerModel.js"],"names":["mongoose","require","Schema","organizer","admins","type","ObjectId","ref","name","String","trim","required","url","logo","about","email","website","twitter","instagram","wallet","active","Boolean","OrganizerSchema","set","getters","virtuals","models","Organizer","model"],"mappings":"AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAEL,QAAQ,CAACE,MAAT,CAAgBI,QADxB;AAEEC,IAAAA,GAAG,EAAE;AAFP,GADM,CADQ;AAOhBC,EAAAA,IAAI,EAAE;AACJH,IAAAA,IAAI,EAAEI,MADF;AAEJC,IAAAA,IAAI,EAAE,IAFF;AAGJC,IAAAA,QAAQ,EAAE;AAHN,GAPU;AAYhBC,EAAAA,GAAG,EAAE;AACHP,IAAAA,IAAI,EAAEI,MADH;AAEHC,IAAAA,IAAI,EAAE,IAFH;AAGHC,IAAAA,QAAQ,EAAE;AAHP,GAZW;AAiBhBE,EAAAA,IAAI,EAAE;AACJR,IAAAA,IAAI,EAAEI;AADF,GAjBU;AAoBhBK,EAAAA,KAAK,EAAE;AACLT,IAAAA,IAAI,EAAEI,MADD;AAELC,IAAAA,IAAI,EAAE,IAFD;AAGLC,IAAAA,QAAQ,EAAE;AAHL,GApBS;AAyBhBI,EAAAA,KAAK,EAAE;AACLV,IAAAA,IAAI,EAAEI,MADD;AAELC,IAAAA,IAAI,EAAE;AAFD,GAzBS;AA6BhBM,EAAAA,OAAO,EAAE;AACPX,IAAAA,IAAI,EAAEI,MADC;AAEPC,IAAAA,IAAI,EAAE;AAFC,GA7BO;AAiChBO,EAAAA,OAAO,EAAE;AACPZ,IAAAA,IAAI,EAAEI,MADC;AAEPC,IAAAA,IAAI,EAAE;AAFC,GAjCO;AAqChBQ,EAAAA,SAAS,EAAE;AACTb,IAAAA,IAAI,EAAEI,MADG;AAETC,IAAAA,IAAI,EAAE;AAFG,GArCK;AAyChBS,EAAAA,MAAM,EAAE;AACNd,IAAAA,IAAI,EAAEI;AADA,GAzCQ;AA4ChBW,EAAAA,MAAM,EAAE;AACNf,IAAAA,IAAI,EAAEgB,OADA;AAEN,eAAS;AAFH;AA5CQ,CAAlB;AAkDA,IAAMC,eAAe,GAAG,IAAIpB,MAAJ,CAAWC,SAAX,CAAxB;AAEAmB,eAAe,CAACC,GAAhB,CAAoB,QAApB,EAA8B;AAC5BC,EAAAA,OAAO,EAAE,IADmB;AAE5BC,EAAAA,QAAQ,EAAE;AAFkB,CAA9B;AAKA,eAAezB,QAAQ,CAAC0B,MAAT,CAAgBC,SAAhB,IACb3B,QAAQ,CAAC4B,KAAT,CAAe,WAAf,EAA4BN,eAA5B,CADF","sourcesContent":["const mongoose = require(\"mongoose\");\nconst Schema = mongoose.Schema;\n\nconst organizer = {\n  admins: [\n    {\n      type: mongoose.Schema.ObjectId,\n      ref: \"User\",\n    },\n  ],\n  name: {\n    type: String,\n    trim: true,\n    required: true,\n  },\n  url: {\n    type: String,\n    trim: true,\n    required: true,\n  },\n  logo: {\n    type: String,\n  },\n  about: {\n    type: String,\n    trim: true,\n    required: true,\n  },\n  email: {\n    type: String,\n    trim: true,\n  },\n  website: {\n    type: String,\n    trim: true,\n  },\n  twitter: {\n    type: String,\n    trim: true,\n  },\n  instagram: {\n    type: String,\n    trim: true,\n  },\n  wallet: {\n    type: String,\n  },\n  active: {\n    type: Boolean,\n    default: false,\n  },\n};\n\nconst OrganizerSchema = new Schema(organizer);\n\nOrganizerSchema.set(\"toJSON\", {\n  getters: true,\n  virtuals: true,\n});\n\nexport default mongoose.models.Organizer ||\n  mongoose.model(\"Organizer\", OrganizerSchema);\n"]},"metadata":{},"sourceType":"module"}