{"ast":null,"code":"var mongoose = require(\"mongoose\");\n\nvar Schema = mongoose.Schema;\n\nrequire(\"./organizerModel\");\n\nvar program = {\n  organizers: [{\n    type: mongoose.Schema.ObjectId,\n    ref: \"Organizer\"\n  }],\n  name: {\n    type: String,\n    trim: true,\n    required: true\n  },\n  url: {\n    type: String,\n    trim: true,\n    required: true\n  },\n  description: {\n    type: String,\n    trim: true,\n    required: true\n  },\n  tagline: {\n    type: String,\n    trime: true\n  },\n  logistics: {\n    type: String,\n    trim: true,\n    required: true\n  },\n  criteria: {\n    type: String,\n    trim: true,\n    required: true\n  },\n  curators: [{\n    type: mongoose.Schema.ObjectId,\n    ref: \"User\"\n  }],\n  active: {\n    // Shown in application list\n    type: Boolean,\n    \"default\": false\n  },\n  isProtected: {\n    type: Boolean,\n    \"default\": false\n  },\n  passcode: {\n    type: String\n  },\n  open: {\n    type: Date\n  },\n  close: {\n    type: Date\n  },\n  closeApplication: {\n    type: Boolean\n  },\n  perpetual: {\n    type: Boolean,\n    \"default\": false\n  },\n  passByVotes: {\n    type: Boolean,\n    \"default\": true\n  },\n  blindVoting: {\n    type: Boolean,\n    \"default\": true\n  },\n  topThreshold: {\n    type: Number,\n    \"default\": 10\n  },\n  voteThreshold: {\n    type: Number,\n    \"default\": 3\n  },\n  contractAddress: {\n    type: String\n  },\n  creationInProgress: {\n    type: Boolean,\n    \"default\": false\n  },\n  ownershipTransferred: {\n    type: Boolean,\n    \"default\": false\n  },\n  mintToArtist: {\n    type: Boolean,\n    \"default\": false\n  },\n  curationLock: {\n    type: Boolean,\n    \"default\": false\n  },\n  hideResults: {\n    type: Boolean,\n    \"default\": false\n  },\n  curatorAddress: {\n    type: String\n  },\n  mintInProgress: {\n    type: Boolean\n  },\n  exhibiting: {\n    type: Boolean,\n    \"default\": false\n  },\n  finalized: {\n    type: Boolean,\n    \"default\": false\n  },\n  order: {\n    type: Number\n  },\n  total: {\n    type: Number,\n    \"default\": 0\n  }\n};\nvar ProgramSchema = new Schema(program);\nProgramSchema.set(\"toJSON\", {\n  getters: true,\n  virtuals: true\n});\nexport default mongoose.models.Program || mongoose.model(\"Program\", ProgramSchema);","map":{"version":3,"sources":["/Users/kirilclimson/grants/models/programModel.js"],"names":["mongoose","require","Schema","program","organizers","type","ObjectId","ref","name","String","trim","required","url","description","tagline","trime","logistics","criteria","curators","active","Boolean","isProtected","passcode","open","Date","close","closeApplication","perpetual","passByVotes","blindVoting","topThreshold","Number","voteThreshold","contractAddress","creationInProgress","ownershipTransferred","mintToArtist","curationLock","hideResults","curatorAddress","mintInProgress","exhibiting","finalized","order","total","ProgramSchema","set","getters","virtuals","models","Program","model"],"mappings":"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","sourcesContent":["const mongoose = require(\"mongoose\");\nconst Schema = mongoose.Schema;\nrequire(\"./organizerModel\");\n\nconst program = {\n  organizers: [\n    {\n      type: mongoose.Schema.ObjectId,\n      ref: \"Organizer\",\n    },\n  ],\n  name: {\n    type: String,\n    trim: true,\n    required: true,\n  },\n  url: {\n    type: String,\n    trim: true,\n    required: true,\n  },\n  description: {\n    type: String,\n    trim: true,\n    required: true,\n  },\n  tagline: {\n    type: String,\n    trime: true,\n  },\n  logistics: {\n    type: String,\n    trim: true,\n    required: true,\n  },\n  criteria: {\n    type: String,\n    trim: true,\n    required: true,\n  },\n  curators: [\n    {\n      type: mongoose.Schema.ObjectId,\n      ref: \"User\",\n    },\n  ],\n  active: {\n    // Shown in application list\n    type: Boolean,\n    default: false,\n  },\n  isProtected: {\n    type: Boolean,\n    default: false,\n  },\n  passcode: {\n    type: String,\n  },\n  open: {\n    type: Date,\n  },\n  close: {\n    type: Date,\n  },\n  closeApplication: {\n    type: Boolean,\n  },\n  perpetual: {\n    type: Boolean,\n    default: false,\n  },\n  passByVotes: {\n    type: Boolean,\n    default: true,\n  },\n  blindVoting: {\n    type: Boolean,\n    default: true,\n  },\n  topThreshold: {\n    type: Number,\n    default: 10,\n  },\n  voteThreshold: {\n    type: Number,\n    default: 3,\n  },\n  contractAddress: {\n    type: String,\n  },\n  creationInProgress: {\n    type: Boolean,\n    default: false,\n  },\n  ownershipTransferred: {\n    type: Boolean,\n    default: false,\n  },\n  mintToArtist: {\n    type: Boolean,\n    default: false,\n  },\n  curationLock: {\n    type: Boolean,\n    default: false,\n  },\n  hideResults: {\n    type: Boolean,\n    default: false,\n  },\n  curatorAddress: {\n    type: String,\n  },\n  mintInProgress: {\n    type: Boolean,\n  },\n  exhibiting: {\n    type: Boolean,\n    default: false,\n  },\n  finalized: {\n    type: Boolean,\n    default: false,\n  },\n  order: {\n    type: Number,\n  },\n  total: {\n    type: Number,\n    default: 0,\n  },\n};\n\nconst ProgramSchema = new Schema(program);\n\nProgramSchema.set(\"toJSON\", {\n  getters: true,\n  virtuals: true,\n});\n\nexport default mongoose.models.Program ||\n  mongoose.model(\"Program\", ProgramSchema);\n"]},"metadata":{},"sourceType":"module"}